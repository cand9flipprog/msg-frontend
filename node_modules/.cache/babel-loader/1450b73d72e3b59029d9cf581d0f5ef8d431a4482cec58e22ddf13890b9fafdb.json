{"ast":null,"code":"var _jsxFileName = \"/home/mika/projects/messanger/frontend/src/components/ChatSkeleton.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport getUserInfo from \"../requests/getUserInfo.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatSkeleton = ({\n  updateChats\n}) => {\n  _s();\n  const [chats, setChats] = useState([]);\n  const [userId, setUserId] = useState(null);\n  const navigate = useNavigate();\n  const API_URL = \"http://192.168.242.67:8000/api/users/chats\";\n  useEffect(() => {\n    const fetchData = async () => {\n      const respChats = await fetch(API_URL).then(resp => resp.json()).then(async data => {\n        const updatedChats = await Promise.all(data.map(async item => {\n          const interlocutorInfo = await getUserInfo();\n          return {\n            ...item,\n            interlocutorName: interlocutorInfo.name,\n            interlocutorSurname: interlocutorInfo.surname,\n            lastMessage: \"Hello!\"\n          };\n        }));\n        setChats(updatedChats);\n      });\n      const respUserInfo = await getUserInfo();\n      setUserId(respUserInfo.id_user);\n      return {\n        respChats,\n        respUserInfo\n      };\n    };\n    fetchData();\n  }, []);\n  const openChat = id => {\n    navigate(`/chat/${id}`);\n  };\n  const convertDate = date => {\n    const [newDate, splitDate] = String(date).split(\"T\");\n    return newDate;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: chats.map((item, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cursor-pointer mt-5\",\n      onClick: () => openChat(item.chat_name),\n      children: userId === item.current_user_id || userId === item.target_user_id ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"px-4 py-2 border-solid border-2 border-slate-300 flex flex-col items-center justify-center gap-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: item.chat_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: `${item.interlocutorName} ${item.interlocutorSurname}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: item.lastMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: convertDate(item.created_date)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 25\n      }, this) : null\n    }, idx, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n_s(ChatSkeleton, \"t+Y/JGQMbh6yWE2oiiwg481QS54=\", false, function () {\n  return [useNavigate];\n});\n_c = ChatSkeleton;\nexport default ChatSkeleton;\nvar _c;\n$RefreshReg$(_c, \"ChatSkeleton\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","getUserInfo","jsxDEV","_jsxDEV","ChatSkeleton","updateChats","_s","chats","setChats","userId","setUserId","navigate","API_URL","fetchData","respChats","fetch","then","resp","json","data","updatedChats","Promise","all","map","item","interlocutorInfo","interlocutorName","name","interlocutorSurname","surname","lastMessage","respUserInfo","id_user","openChat","id","convertDate","date","newDate","splitDate","String","split","children","idx","className","onClick","chat_name","current_user_id","target_user_id","fileName","_jsxFileName","lineNumber","columnNumber","created_date","_c","$RefreshReg$"],"sources":["/home/mika/projects/messanger/frontend/src/components/ChatSkeleton.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport getUserInfo from \"../requests/getUserInfo.js\";\n\nconst ChatSkeleton = ({ updateChats }) => {\n    const [chats, setChats] = useState([]);\n    const [userId, setUserId] = useState(null);\n\n    const navigate = useNavigate();\n\n    const API_URL = \"http://192.168.242.67:8000/api/users/chats\";\n\n    useEffect(() => {\n        const fetchData = async () => {\n            const respChats = await fetch(API_URL).then(resp => resp.json()).then(async data => {\n                const updatedChats = await Promise.all(data.map(async (item) => {\n                    const interlocutorInfo = await getUserInfo();\n\n                    return {\n                        ...item,\n                        interlocutorName: interlocutorInfo.name,\n                        interlocutorSurname: interlocutorInfo.surname,\n                        lastMessage: \"Hello!\",\n                    };\n                }));\n\n                setChats(updatedChats);\n            });\n\n            const respUserInfo = await getUserInfo();\n\n            setUserId(respUserInfo.id_user);\n\n            return { respChats, respUserInfo };\n        }\n\n        fetchData();\n    }, []);\n\n    const openChat = (id) => {\n        navigate(`/chat/${id}`);\n    };\n\n    const convertDate = (date) => {\n        const [newDate, splitDate] = String(date).split(\"T\");\n\n        return newDate;\n    };\n\n    return (\n        <div>\n            {chats.map((item, idx) => (\n                <div key={idx} className=\"cursor-pointer mt-5\" onClick={() => openChat(item.chat_name)}>\n                    {userId === item.current_user_id || userId === item.target_user_id ? (\n                        <div className=\"px-4 py-2 border-solid border-2 border-slate-300 flex flex-col items-center justify-center gap-2\">\n                            <span>{item.chat_name}</span>\n                            <span>{`${item.interlocutorName} ${item.interlocutorSurname}`}</span>\n                            <span>{item.lastMessage}</span>\n                            <span>{convertDate(item.created_date)}</span>\n                        </div>\n                    ) : null}\n                </div>\n            ))}\n        </div>\n    );\n};\n\nexport default ChatSkeleton;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}