{"ast":null,"code":"var _jsxFileName = \"/home/mika/projects/messanger/frontend/src/components/ChatSkeleton.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport getUserInfo from \"../requests/getUserInfo.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatSkeleton = () => {\n  _s();\n  const [chats, setChats] = useState([]);\n  const [userId, setUserId] = useState(null);\n  const navigate = useNavigate();\n  const API_URL = \"http://127.0.0.1:8000/api/users/chats\";\n  useEffect(() => {\n    const fetchData = async () => {\n      const respChats = await fetch(API_URL).then(resp => resp.json()).then(data => {\n        const updatedChats = data.map(item => ({\n          ...item,\n          interlocutorName: \"John\",\n          // Замените на реальное имя\n          interlocutorSurname: \"Doe\",\n          lastMessage: \"Hello!\"\n        }));\n        setChats(updatedChats);\n      });\n      const respUserInfo = await getUserInfo();\n      setUserId(respUserInfo.id_user);\n      return {\n        respChats,\n        respUserInfo\n      };\n    };\n    fetchData();\n  }, []);\n  const openChat = id => {\n    navigate(`/chat/${id}`);\n  };\n  const convertDate = date => {\n    const [newDate, splitDate] = String(date).split(\"T\");\n    return newDate;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: chats.map((item, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cursor-pointer mt-5\",\n      onClick: () => openChat(item.chat_name),\n      children: userId === item.current_user_id || userId === item.target_user_id ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"px-4 py-2 border-solid border-2 border-slate-300 flex flex-col items-center justify-center gap-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: item.chat_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: `${item.interlocutorName} ${item.interlocutorSurname}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: item.lastMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: convertDate(item.created_date)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 25\n      }, this) : null\n    }, idx, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n_s(ChatSkeleton, \"t+Y/JGQMbh6yWE2oiiwg481QS54=\", false, function () {\n  return [useNavigate];\n});\n_c = ChatSkeleton;\nexport default ChatSkeleton;\nvar _c;\n$RefreshReg$(_c, \"ChatSkeleton\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","getUserInfo","jsxDEV","_jsxDEV","ChatSkeleton","_s","chats","setChats","userId","setUserId","navigate","API_URL","fetchData","respChats","fetch","then","resp","json","data","updatedChats","map","item","interlocutorName","interlocutorSurname","lastMessage","respUserInfo","id_user","openChat","id","convertDate","date","newDate","splitDate","String","split","children","idx","className","onClick","chat_name","current_user_id","target_user_id","fileName","_jsxFileName","lineNumber","columnNumber","created_date","_c","$RefreshReg$"],"sources":["/home/mika/projects/messanger/frontend/src/components/ChatSkeleton.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport getUserInfo from \"../requests/getUserInfo.js\";\n\nconst ChatSkeleton = () => {\n    const [chats, setChats] = useState([]);\n    const [userId, setUserId] = useState(null);\n\n    const navigate = useNavigate();\n\n    const API_URL = \"http://127.0.0.1:8000/api/users/chats\";\n\n    useEffect(() => {\n        const fetchData = async () => {\n            const respChats = await fetch(API_URL)\n                .then(resp => resp.json())\n                .then(data => {\n                    const updatedChats = data.map(item => ({\n                        ...item,\n                        interlocutorName: \"John\", // Замените на реальное имя\n                        interlocutorSurname: \"Doe\",\n                        lastMessage: \"Hello!\",\n                    }));\n\n                    setChats(updatedChats);\n                });\n\n            const respUserInfo = await getUserInfo();\n\n            setUserId(respUserInfo.id_user);\n\n            return { respChats, respUserInfo };\n        };\n\n        fetchData();\n    }, []);\n\n    const openChat = (id) => {\n        navigate(`/chat/${id}`);\n    };\n\n    const convertDate = (date) => {\n        const [newDate, splitDate] = String(date).split(\"T\");\n\n        return newDate;\n    };\n\n    return (\n        <div>\n            {chats.map((item, idx) => (\n                <div key={idx} className=\"cursor-pointer mt-5\" onClick={() => openChat(item.chat_name)}>\n                    {userId === item.current_user_id || userId === item.target_user_id ? (\n                        <div className=\"px-4 py-2 border-solid border-2 border-slate-300 flex flex-col items-center justify-center gap-2\">\n                            <span>{item.chat_name}</span>\n                            <span>{`${item.interlocutorName} ${item.interlocutorSurname}`}</span>\n                            <span>{item.lastMessage}</span>\n                            <span>{convertDate(item.created_date)}</span>\n                        </div>\n                    ) : null}\n                </div>\n            ))}\n        </div>\n    );\n};\n\nexport default ChatSkeleton;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,WAAW,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACU,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAE1C,MAAMY,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAE9B,MAAMW,OAAO,GAAG,uCAAuC;EAEvDZ,SAAS,CAAC,MAAM;IACZ,MAAMa,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1B,MAAMC,SAAS,GAAG,MAAMC,KAAK,CAACH,OAAO,CAAC,CACjCI,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAACG,IAAI,IAAI;QACV,MAAMC,YAAY,GAAGD,IAAI,CAACE,GAAG,CAACC,IAAI,KAAK;UACnC,GAAGA,IAAI;UACPC,gBAAgB,EAAE,MAAM;UAAE;UAC1BC,mBAAmB,EAAE,KAAK;UAC1BC,WAAW,EAAE;QACjB,CAAC,CAAC,CAAC;QAEHjB,QAAQ,CAACY,YAAY,CAAC;MAC1B,CAAC,CAAC;MAEN,MAAMM,YAAY,GAAG,MAAMxB,WAAW,CAAC,CAAC;MAExCQ,SAAS,CAACgB,YAAY,CAACC,OAAO,CAAC;MAE/B,OAAO;QAAEb,SAAS;QAAEY;MAAa,CAAC;IACtC,CAAC;IAEDb,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMe,QAAQ,GAAIC,EAAE,IAAK;IACrBlB,QAAQ,CAAE,SAAQkB,EAAG,EAAC,CAAC;EAC3B,CAAC;EAED,MAAMC,WAAW,GAAIC,IAAI,IAAK;IAC1B,MAAM,CAACC,OAAO,EAAEC,SAAS,CAAC,GAAGC,MAAM,CAACH,IAAI,CAAC,CAACI,KAAK,CAAC,GAAG,CAAC;IAEpD,OAAOH,OAAO;EAClB,CAAC;EAED,oBACI5B,OAAA;IAAAgC,QAAA,EACK7B,KAAK,CAACc,GAAG,CAAC,CAACC,IAAI,EAAEe,GAAG,kBACjBjC,OAAA;MAAekC,SAAS,EAAC,qBAAqB;MAACC,OAAO,EAAEA,CAAA,KAAMX,QAAQ,CAACN,IAAI,CAACkB,SAAS,CAAE;MAAAJ,QAAA,EAClF3B,MAAM,KAAKa,IAAI,CAACmB,eAAe,IAAIhC,MAAM,KAAKa,IAAI,CAACoB,cAAc,gBAC9DtC,OAAA;QAAKkC,SAAS,EAAC,kGAAkG;QAAAF,QAAA,gBAC7GhC,OAAA;UAAAgC,QAAA,EAAOd,IAAI,CAACkB;QAAS;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC7B1C,OAAA;UAAAgC,QAAA,EAAQ,GAAEd,IAAI,CAACC,gBAAiB,IAAGD,IAAI,CAACE,mBAAoB;QAAC;UAAAmB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACrE1C,OAAA;UAAAgC,QAAA,EAAOd,IAAI,CAACG;QAAW;UAAAkB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC/B1C,OAAA;UAAAgC,QAAA,EAAON,WAAW,CAACR,IAAI,CAACyB,YAAY;QAAC;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5C,CAAC,GACN;IAAI,GARFT,GAAG;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OASR,CACR;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd,CAAC;AAACxC,EAAA,CA3DID,YAAY;EAAA,QAIGJ,WAAW;AAAA;AAAA+C,EAAA,GAJ1B3C,YAAY;AA6DlB,eAAeA,YAAY;AAAC,IAAA2C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}