{"ast":null,"code":"var _jsxFileName = \"/home/mika/projects/messanger/frontend/src/components/Chat.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { CiLocationArrow1 } from \"react-icons/ci\";\nimport { BsEmojiSmile } from \"react-icons/bs\";\nimport getUserInfo from \"../requests/getUserInfo.js\";\nimport { io } from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chat = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [messages, setMessages] = useState([]);\n  const [socket, setSocket] = useState(null);\n  const [currentUserId, setCurrentUserId] = useState(0);\n  const [currentChatId, setCurrentChatId] = useState(0);\n  const [value, setValue] = useState(\"\");\n  const API_URL = \"http://127.0.0.1:8000\";\n  useEffect(() => {\n    const respChat = async () => {\n      const resp = await fetch(`${API_URL}/api/users/chats`);\n      const data = await resp.json();\n      for (const item of data) {\n        if (item.chat_name === id) {\n          setCurrentChatId(item.id_chat);\n        }\n      }\n    };\n    respChat();\n  }, [id]);\n  useEffect(() => {\n    const respMessages = async () => {\n      const resp = await fetch(`${API_URL}/api/messages`);\n      const data = await resp.json();\n      const chatMessages = data.filter(item => item.chat_id === currentChatId);\n      setMessages(chatMessages);\n      const currentUserInfo = await getUserInfo();\n      setCurrentUserId(currentUserInfo.id_user);\n    };\n    respMessages();\n  }, [currentChatId]);\n  useEffect(() => {\n    const newSocket = io(API_URL, {\n      query: {\n        chat_id: currentChatId\n      }\n    });\n    setSocket(newSocket);\n    newSocket.emit(\"join chat\", {\n      chat_id: currentChatId\n    });\n    return () => {\n      newSocket.disconnect();\n    };\n  }, [currentChatId]);\n  useEffect(() => {\n    if (socket) {\n      socket.on(\"chat message\", newMessage => {\n        setMessages(prevMessages => [...prevMessages, newMessage]);\n      });\n    }\n    return () => {\n      if (socket) {\n        socket.off(\"chat message\");\n      }\n    };\n  }, [socket]);\n  const sendMessage = message => {\n    socket.emit(\"chat message\", {\n      chat_id: currentChatId,\n      user_id: currentUserId,\n      message: message\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Open chat: \", id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: messages.map((item, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-slate-700\",\n          children: item.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 25\n        }, this)\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex gap-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Type a message here\",\n        className: \"border-solid border-b border-slate-400 outline-none\",\n        onKeyDown: ev => {\n          if (ev.key === \"Enter\") {\n            if (ev.target.value.trim() === \"\") {\n              return;\n            } else {\n              sendMessage(ev.target.value);\n              ev.target.value = \"\";\n            }\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CiLocationArrow1, {\n        className: \"w-8 h-8 px-2 bg-[#2A8BF2] rounded-full cursor-pointer\",\n        onClick: ev => {\n          setValue(ev.target.value);\n          sendMessage(ev.target.value);\n          ev.target.value = \"\";\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(BsEmojiSmile, {\n        className: \"w-8 h-8 px-2 rounded-full cursor-pointer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n};\n_s(Chat, \"uAVuKmwoUU7RY9HhWG47bEZ0paU=\", false, function () {\n  return [useParams];\n});\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","useParams","CiLocationArrow1","BsEmojiSmile","getUserInfo","io","jsxDEV","_jsxDEV","Chat","_s","id","messages","setMessages","socket","setSocket","currentUserId","setCurrentUserId","currentChatId","setCurrentChatId","value","setValue","API_URL","respChat","resp","fetch","data","json","item","chat_name","id_chat","respMessages","chatMessages","filter","chat_id","currentUserInfo","id_user","newSocket","query","emit","disconnect","on","newMessage","prevMessages","off","sendMessage","message","user_id","children","fileName","_jsxFileName","lineNumber","columnNumber","map","idx","className","type","placeholder","onKeyDown","ev","key","target","trim","onClick","_c","$RefreshReg$"],"sources":["/home/mika/projects/messanger/frontend/src/components/Chat.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { CiLocationArrow1 } from \"react-icons/ci\";\nimport { BsEmojiSmile } from \"react-icons/bs\";\nimport getUserInfo from \"../requests/getUserInfo.js\";\nimport { io } from \"socket.io-client\";\n\nconst Chat = () => {\n    const { id } = useParams();\n    const [messages, setMessages] = useState([]);\n    const [socket, setSocket] = useState(null);\n    const [currentUserId, setCurrentUserId] = useState(0);\n    const [currentChatId, setCurrentChatId] = useState(0);\n    const [value, setValue] = useState(\"\");\n\n    const API_URL = \"http://127.0.0.1:8000\";\n\n    useEffect(() => {\n        const respChat = async () => {\n            const resp = await fetch(`${API_URL}/api/users/chats`);\n            const data = await resp.json();\n\n            for (const item of data) {\n                if (item.chat_name === id) {\n                    setCurrentChatId(item.id_chat);\n                }\n            }\n        };\n\n        respChat();\n    }, [id]);\n\n    useEffect(() => {\n        const respMessages = async () => {\n            const resp = await fetch(`${API_URL}/api/messages`);\n            const data = await resp.json();\n\n            const chatMessages = data.filter((item) => item.chat_id === currentChatId);\n            setMessages(chatMessages);\n\n            const currentUserInfo = await getUserInfo();\n            setCurrentUserId(currentUserInfo.id_user);\n        };\n\n        respMessages();\n    }, [currentChatId]);\n\n    useEffect(() => {\n        const newSocket = io(API_URL, { query: { chat_id: currentChatId } });\n        setSocket(newSocket);\n\n        newSocket.emit(\"join chat\", { chat_id: currentChatId });\n\n        return () => {\n            newSocket.disconnect();\n        };\n    }, [currentChatId]);\n\n    useEffect(() => {\n        if (socket) {\n            socket.on(\"chat message\", (newMessage) => {\n                setMessages((prevMessages) => [...prevMessages, newMessage]);\n            });\n        }\n\n        return () => {\n            if (socket) {\n                socket.off(\"chat message\");\n            }\n        };\n    }, [socket]);\n\n    const sendMessage = (message) => {\n        socket.emit(\"chat message\", {\n            chat_id: currentChatId,\n            user_id: currentUserId,\n            message: message,\n        });\n    };\n\n    return (\n        <div>\n            <div>\n                <span>Open chat: {id}</span>\n            </div>\n            <div>\n                {messages.map((item, idx) => (\n                    <div key={idx}>\n                        <span className=\"text-slate-700\">{item.message}</span>\n                    </div>\n                ))}\n            </div>\n            <div className=\"flex gap-3\">\n                <input\n                    type=\"text\"\n                    placeholder=\"Type a message here\"\n                    className=\"border-solid border-b border-slate-400 outline-none\"\n                    onKeyDown={(ev) => {\n                        if (ev.key === \"Enter\") {\n                            if (ev.target.value.trim() === \"\") {\n                                return;\n                            } else {\n                                sendMessage(ev.target.value);\n                                ev.target.value = \"\";\n                            }\n                        }\n                    }}\n                />\n                <CiLocationArrow1\n                    className=\"w-8 h-8 px-2 bg-[#2A8BF2] rounded-full cursor-pointer\"\n                    onClick={(ev) => {\n                        setValue(ev.target.value)\n                        sendMessage(ev.target.value);\n                        ev.target.value = \"\";\n                    }}\n                />\n                <BsEmojiSmile className=\"w-8 h-8 px-2 rounded-full cursor-pointer\" />\n            </div>\n        </div>\n    );\n};\n\nexport default Chat;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}