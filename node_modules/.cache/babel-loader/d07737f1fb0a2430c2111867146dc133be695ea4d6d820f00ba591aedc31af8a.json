{"ast":null,"code":"var _jsxFileName = \"/home/mika/projects/messanger/frontend/src/components/Chat.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { CiLocationArrow1 } from \"react-icons/ci\";\nimport { BsEmojiSmile } from \"react-icons/bs\";\nimport getUserInfo from \"../requests/getUserInfo.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chat = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [messages, setMessages] = useState([]);\n  const [inputValue, setInputValue] = useState('');\n  const socketRef = useRef(null);\n  const currentUserIdRef = useRef(0);\n  const API_URL = 'http://127.0.0.1:8000/api';\n  const WS_URL = 'ws://127.0.0.1:3000';\n  useEffect(() => {\n    const fetchData = async () => {\n      const respMessages = await fetch(`${API_URL}/messages`).then(resp => resp.json());\n      setMessages(respMessages);\n      const currentUserInfo = await getUserInfo();\n      currentUserIdRef.current = currentUserInfo.id_user;\n    };\n    fetchData();\n    setTimeout(() => {\n      const newSocket = new WebSocket(`${WS_URL}/${id}`);\n      socketRef.current = newSocket;\n      console.log(newSocket.onerror(e));\n      if (socketRef.current === null) {\n        return console.error(\"АШИБКА\");\n      } else {\n        newSocket.addEventListener('open', () => {\n          console.log('WebSocket connection is open.');\n          const user_id = currentUserIdRef.current;\n          const initialMessage = {\n            type: 'initial',\n            user_id\n          };\n          newSocket.send(JSON.stringify(initialMessage));\n        });\n        newSocket.addEventListener('message', event => {\n          console.log(socketRef.current);\n          const data = JSON.parse(event.data);\n          if (data.type === 'message') {\n            setMessages(prevMessages => [...prevMessages, data.content]);\n          }\n        });\n      }\n    }, 1000);\n  }, []);\n  const sendMessage = () => {\n    console.log(`socket: ${socketRef.current.readyState} websocket: ${WebSocket.OPEN}`);\n    if (inputValue.trim() !== '') {\n      if (socketRef.current.readyState === WebSocket.OPEN) {\n        const user_id = currentUserIdRef.current;\n        const messageData = {\n          type: 'message',\n          user_id,\n          content: inputValue\n        };\n        console.log('Sending message:', messageData);\n        socketRef.current.send(JSON.stringify(messageData));\n        setInputValue('');\n      } else {\n        console.log('WebSocket connection not open');\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Open chat: \", id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: messages.map((item, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: item\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 25\n        }, this)\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex gap-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Type a message here\",\n        className: \"border-solid border-b border-slate-400 outline-none\",\n        value: inputValue,\n        onChange: ev => setInputValue(ev.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CiLocationArrow1, {\n        className: \"w-8 h-8 px-2 bg-[#2A8BF2] rounded-full cursor-pointer\",\n        onClick: sendMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(BsEmojiSmile, {\n        className: \"w-8 h-8 px-2 rounded-full cursor-pointer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n};\n_s(Chat, \"c5xJJE/SZJWNQBsnfqBnDCfkc6E=\", false, function () {\n  return [useParams];\n});\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useEffect","useState","useRef","useParams","CiLocationArrow1","BsEmojiSmile","getUserInfo","jsxDEV","_jsxDEV","Chat","_s","id","messages","setMessages","inputValue","setInputValue","socketRef","currentUserIdRef","API_URL","WS_URL","fetchData","respMessages","fetch","then","resp","json","currentUserInfo","current","id_user","setTimeout","newSocket","WebSocket","console","log","onerror","e","error","addEventListener","user_id","initialMessage","type","send","JSON","stringify","event","data","parse","prevMessages","content","sendMessage","readyState","OPEN","trim","messageData","children","fileName","_jsxFileName","lineNumber","columnNumber","map","item","idx","className","placeholder","value","onChange","ev","target","onClick","_c","$RefreshReg$"],"sources":["/home/mika/projects/messanger/frontend/src/components/Chat.jsx"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { CiLocationArrow1 } from \"react-icons/ci\";\nimport { BsEmojiSmile } from \"react-icons/bs\";\nimport getUserInfo from \"../requests/getUserInfo.js\";\n\nconst Chat = () => {\n    const { id } = useParams();\n    const [messages, setMessages] = useState([]);\n    const [inputValue, setInputValue] = useState('');\n    const socketRef = useRef(null);\n    const currentUserIdRef = useRef(0);\n\n    const API_URL = 'http://127.0.0.1:8000/api';\n    const WS_URL = 'ws://127.0.0.1:3000';\n\n    useEffect(() => {\n        const fetchData = async () => {\n            const respMessages = await fetch(`${API_URL}/messages`).then(resp => resp.json());\n            setMessages(respMessages);\n\n            const currentUserInfo = await getUserInfo();\n            currentUserIdRef.current = currentUserInfo.id_user;\n        };\n\n        fetchData();\n\n        setTimeout(() => {\n            const newSocket = new WebSocket(`${WS_URL}/${id}`);\n            socketRef.current = newSocket;\n\n            console.log(newSocket.onerror(e))\n\n            if (socketRef.current === null) {\n                return console.error(\"АШИБКА\");\n            } else {\n                newSocket.addEventListener('open', () => {\n                    console.log('WebSocket connection is open.');\n\n                    const user_id = currentUserIdRef.current;\n                    const initialMessage = { type: 'initial', user_id };\n                    newSocket.send(JSON.stringify(initialMessage));\n                });\n\n                newSocket.addEventListener('message', (event) => {\n                    console.log(socketRef.current);\n                    const data = JSON.parse(event.data);\n\n                    if (data.type === 'message') {\n                        setMessages((prevMessages) => [...prevMessages, data.content]);\n                    }\n                });\n            }\n        }, 1000);\n    }, []);\n\n    const sendMessage = () => {\n        console.log(`socket: ${socketRef.current.readyState} websocket: ${WebSocket.OPEN}`);\n        if (inputValue.trim() !== '') {\n            if (socketRef.current.readyState === WebSocket.OPEN) {\n                const user_id = currentUserIdRef.current;\n                const messageData = { type: 'message', user_id, content: inputValue };\n\n                console.log('Sending message:', messageData);\n\n                socketRef.current.send(JSON.stringify(messageData));\n\n                setInputValue('');\n            } else {\n                console.log('WebSocket connection not open');\n            }\n        }\n    };\n\n    return (\n        <div>\n            <div>\n                <span>Open chat: {id}</span>\n            </div>\n            <div>\n                {messages.map((item, idx) => (\n                    <div key={idx}>\n                        <span>{item}</span>\n                    </div>\n                ))}\n            </div>\n            <div className=\"flex gap-3\">\n                <input\n                    type=\"text\"\n                    placeholder=\"Type a message here\"\n                    className=\"border-solid border-b border-slate-400 outline-none\"\n                    value={inputValue}\n                    onChange={(ev) => setInputValue(ev.target.value)}\n                />\n                <CiLocationArrow1\n                    className=\"w-8 h-8 px-2 bg-[#2A8BF2] rounded-full cursor-pointer\"\n                    onClick={sendMessage}\n                />\n                <BsEmojiSmile className=\"w-8 h-8 px-2 rounded-full cursor-pointer\" />\n            </div>\n        </div>\n    );\n};\n\nexport default Chat;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}