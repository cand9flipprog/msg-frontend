{"ast":null,"code":"var _jsxFileName = \"/home/mika/projects/messanger/frontend/src/components/Chat.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { CiLocationArrow1 } from \"react-icons/ci\";\nimport { BsEmojiSmile } from \"react-icons/bs\";\nimport getUserInfo from \"../requests/getUserInfo.js\";\nimport { io } from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chat = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [messages, setMessages] = useState([]);\n  const [socket, setSocket] = useState(null);\n  const [currentUserId, setCurrentUserId] = useState(0);\n  const [currentChatId, setCurrentChatId] = useState(0);\n  const [value, setValue] = useState(\"\");\n  const messagesContainerRef = useRef(null);\n  const inputRef = useRef(null);\n  const API_URL = \"http://127.0.0.1:8000\";\n  useEffect(() => {\n    const respChat = async () => {\n      const resp = await fetch(`${API_URL}/api/users/chats`);\n      const data = await resp.json();\n      for (const item of data) {\n        if (item.chat_name === id) {\n          setCurrentChatId(item.id_chat);\n        }\n      }\n    };\n    respChat();\n  }, [id]);\n  useEffect(() => {\n    const respMessages = async () => {\n      const resp = await fetch(`${API_URL}/api/messages`);\n      const data = await resp.json();\n      const chatMessages = data.filter(item => item.chat_id === currentChatId);\n      setMessages(chatMessages);\n      const currentUserInfo = await getUserInfo();\n      setCurrentUserId(currentUserInfo.id_user);\n    };\n    respMessages();\n  }, [currentChatId]);\n  useEffect(() => {\n    const newSocket = io(API_URL, {\n      query: {\n        chat_id: currentChatId\n      }\n    });\n    setSocket(newSocket);\n    newSocket.emit(\"join chat\", {\n      chat_id: currentChatId\n    });\n    return () => {\n      newSocket.disconnect();\n    };\n  }, [currentChatId]);\n  useEffect(() => {\n    if (socket) {\n      socket.on(\"chat message\", newMessage => {\n        setMessages(prevMessages => [...prevMessages, newMessage]);\n      });\n    }\n    return () => {\n      if (socket) {\n        socket.off(\"chat message\");\n      }\n    };\n  }, [socket]);\n  useEffect(() => {\n    // Прокрутка вниз при добавлении нового сообщения\n    if (messagesContainerRef.current) {\n      messagesContainerRef.current.scrollTop = messagesContainerRef.current.scrollHeight;\n    }\n  }, [messages]);\n  const sendMessage = message => {\n    socket.emit(\"chat message\", {\n      chat_id: currentChatId,\n      user_id: currentUserId,\n      message: message\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col h-screen\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col flex-grow overflow-y-auto\",\n      ref: messagesContainerRef,\n      children: messages.map((item, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${currentUserId === item.user_id ? \"text-right text-blue-500\" : \"text-left text-red-500\"}`,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: `${currentUserId === item.user_id ? \"text-blue-500\" : \"text-red-500\"}`,\n          children: item.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 25\n        }, this)\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex gap-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        ref: inputRef,\n        type: \"text\",\n        placeholder: \"Type a message here\",\n        className: \"border-solid border-b-2 border-slate-400 outline-none\",\n        value: value,\n        onChange: ev => setValue(ev.target.value),\n        onKeyDown: ev => {\n          if (ev.key === \"Enter\") {\n            if (ev.target.value.trim() === \"\") {\n              return;\n            } else {\n              sendMessage(ev.target.value);\n              setValue(\"\");\n              inputRef.current.focus();\n            }\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CiLocationArrow1, {\n        className: \"w-8 h-8 px-2 bg-[#2A8BF2] rounded-full cursor-pointer\",\n        onClick: () => {\n          sendMessage(value);\n          setValue(\"\");\n          inputRef.current.focus();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(BsEmojiSmile, {\n        className: \"w-8 h-8 px-2 rounded-full cursor-pointer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 9\n  }, this);\n};\n_s(Chat, \"VSftEFUN5l/bsy7zHUDGZ/sYUQI=\", false, function () {\n  return [useParams];\n});\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useParams","CiLocationArrow1","BsEmojiSmile","getUserInfo","io","jsxDEV","_jsxDEV","Chat","_s","id","messages","setMessages","socket","setSocket","currentUserId","setCurrentUserId","currentChatId","setCurrentChatId","value","setValue","messagesContainerRef","inputRef","API_URL","respChat","resp","fetch","data","json","item","chat_name","id_chat","respMessages","chatMessages","filter","chat_id","currentUserInfo","id_user","newSocket","query","emit","disconnect","on","newMessage","prevMessages","off","current","scrollTop","scrollHeight","sendMessage","message","user_id","className","children","ref","map","idx","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","ev","target","onKeyDown","key","trim","focus","onClick","_c","$RefreshReg$"],"sources":["/home/mika/projects/messanger/frontend/src/components/Chat.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { CiLocationArrow1 } from \"react-icons/ci\";\nimport { BsEmojiSmile } from \"react-icons/bs\";\nimport getUserInfo from \"../requests/getUserInfo.js\";\nimport { io } from \"socket.io-client\";\n\nconst Chat = () => {\n    const { id } = useParams();\n    const [messages, setMessages] = useState([]);\n    const [socket, setSocket] = useState(null);\n    const [currentUserId, setCurrentUserId] = useState(0);\n    const [currentChatId, setCurrentChatId] = useState(0);\n    const [value, setValue] = useState(\"\");\n\n    const messagesContainerRef = useRef(null);\n    const inputRef = useRef(null);\n\n    const API_URL = \"http://127.0.0.1:8000\";\n\n    useEffect(() => {\n        const respChat = async () => {\n            const resp = await fetch(`${API_URL}/api/users/chats`);\n            const data = await resp.json();\n\n            for (const item of data) {\n                if (item.chat_name === id) {\n                    setCurrentChatId(item.id_chat);\n                }\n            }\n        };\n\n        respChat();\n    }, [id]);\n\n    useEffect(() => {\n        const respMessages = async () => {\n            const resp = await fetch(`${API_URL}/api/messages`);\n            const data = await resp.json();\n\n            const chatMessages = data.filter((item) => item.chat_id === currentChatId);\n            setMessages(chatMessages);\n\n            const currentUserInfo = await getUserInfo();\n            setCurrentUserId(currentUserInfo.id_user);\n        };\n\n        respMessages();\n    }, [currentChatId]);\n\n    useEffect(() => {\n        const newSocket = io(API_URL, { query: { chat_id: currentChatId } });\n        setSocket(newSocket);\n\n        newSocket.emit(\"join chat\", { chat_id: currentChatId });\n\n        return () => {\n            newSocket.disconnect();\n        };\n    }, [currentChatId]);\n\n    useEffect(() => {\n        if (socket) {\n            socket.on(\"chat message\", (newMessage) => {\n                setMessages((prevMessages) => [...prevMessages, newMessage]);\n            });\n        }\n\n        return () => {\n            if (socket) {\n                socket.off(\"chat message\");\n            }\n        };\n    }, [socket]);\n\n    useEffect(() => {\n        // Прокрутка вниз при добавлении нового сообщения\n        if (messagesContainerRef.current) {\n            messagesContainerRef.current.scrollTop = messagesContainerRef.current.scrollHeight;\n        }\n    }, [messages]);\n\n    const sendMessage = (message) => {\n        socket.emit(\"chat message\", {\n            chat_id: currentChatId,\n            user_id: currentUserId,\n            message: message,\n        });\n    };\n\n    return (\n        <div className=\"flex flex-col h-screen\">\n            <div className=\"flex flex-col flex-grow overflow-y-auto\" ref={messagesContainerRef}>\n                {messages.map((item, idx) => (\n                    <div key={idx} className={`${currentUserId === item.user_id ? \"text-right text-blue-500\" : \"text-left text-red-500\"}`}>\n                        <span className={`${currentUserId === item.user_id ? \"text-blue-500\" : \"text-red-500\"}`}>{item.message}</span>\n                    </div>\n                ))}\n            </div>\n            <div className=\"flex gap-4\">\n                <input\n                    ref={inputRef}\n                    type=\"text\"\n                    placeholder=\"Type a message here\"\n                    className=\"border-solid border-b-2 border-slate-400 outline-none\"\n                    value={value}\n                    onChange={(ev) => setValue(ev.target.value)}\n                    onKeyDown={(ev) => {\n                        if (ev.key === \"Enter\") {\n                            if (ev.target.value.trim() === \"\") {\n                                return;\n                            } else {\n                                sendMessage(ev.target.value);\n                                setValue(\"\");\n                                inputRef.current.focus();\n                            }\n                        }\n                    }}\n                />\n                <CiLocationArrow1\n                    className=\"w-8 h-8 px-2 bg-[#2A8BF2] rounded-full cursor-pointer\"\n                    onClick={() => {\n                        sendMessage(value);\n                        setValue(\"\");\n                        inputRef.current.focus();\n                    }}\n                />\n                <BsEmojiSmile className=\"w-8 h-8 px-2 rounded-full cursor-pointer\" />\n            </div>\n        </div>\n    );\n};\n\nexport default Chat;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}